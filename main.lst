


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: ***Your Names**update this***
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 2/4/2017
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE0 is LED output (1 activates external9 LED on proto
                       board)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE0 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 8H
                       z,
   15 00000000         ;      which is 8 times per second with a duty-cycle of 
                       20%.
   16 00000000         ;      Therefore, the LED is ON for (0.2*1/8)th of a sec
                       ond
   17 00000000         ;      and OFF for (0.8*1/8)th of a second.
   18 00000000         ;   3) When the button on (PE1) is pressed-and-released 
                       increase
   19 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   20 00000000         ;      press-and-release the duty cycle changes from 20%
                        to 40% to 60%
   21 00000000         ;      to 80% to 100%(ON) to 0%(Off) to 20% to 40% so on
                       
   22 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   23 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   24 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   25 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   26 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 8Hz.
   27 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   28 00000000         ;         cycle or reset to 20%.
   29 00000000         ;      TIP: debugging the breathing LED algorithm and fe
                       el on the simulator is impossible.
   30 00000000         ; PortE device registers
   31 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   32 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   33 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   34 00000000 4002451C 



ARM Macro Assembler    Page 2 


                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   35 00000000         ; PortF device registers
   36 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   37 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   38 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   39 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000         
   42 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   43 00000000                 IMPORT           TExaS_Init
   44 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   45 00000000                 THUMB
   46 00000000                 EXPORT           Start
   47 00000000         Start
   48 00000000         ; TExaS_Init sets bus clock at 80 MHz
   49 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   50 00000004 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   51 00000006 4828            LDR              R0,=SYSCTL_RCGCGPIO_R 
                                                            ;enable the clock
   52 00000008 6801            LDR              R1,[R0]
   53 0000000A F041 0130       ORR              R1,#0x30
   54 0000000E 6001            STR              R1,[R0]
   55 00000010 BF00            NOP
   56 00000012 BF00            NOP
   57 00000014 BF00            NOP
   58 00000016 BF00            NOP
   59 00000018 4824            LDR              R0,=GPIO_PORTE_DIR_R 
                                                            ;enable direction
   60 0000001A 6802            LDR              R2,[R0]
   61 0000001C F04F 0101       MOV              R1,#0x01    ;ports E1 and F4 ar
                                                            e outputs
   62 00000020 EA42 0201       ORR              R2,R1
   63 00000024 F06F 0102       MOV              R1,#0xFFFFFFFD
   64 00000028 EA02 0201       AND              R2,R1
   65 0000002C 6002            STR              R2,[R0]
   66 0000002E 4820            LDR              R0,=GPIO_PORTF_DIR_R
   67 00000030 6801            LDR              R1,[R0]
   68 00000032 F640 72EF       MOV              R2,#0xFEF
   69 00000036 EA01 0102       AND              R1,R2
   70 0000003A 6001            STR              R1,[R0]
   71 0000003C 481D            LDR              R0,=GPIO_PORTF_PUR_R ;enable pu
                                                            ll up resistors for



ARM Macro Assembler    Page 3 


                                                             PF4
   72 0000003E 6801            LDR              R1,[R0]
   73 00000040 F04F 0210       MOV              R2,#0x010
   74 00000044 EA41 0102       ORR              R1,R2
   75 00000048 6001            STR              R1,[R0]
   76 0000004A 481B            LDR              R0,=GPIO_PORTF_DEN_R ;enable da
                                                            ta for port PF4
   77 0000004C 6801            LDR              R1,[R0]
   78 0000004E F04F 0210       MOV              R2,#0x010
   79 00000052 EA41 0102       ORR              R1,R2
   80 00000056 6001            STR              R1,[R0]
   81 00000058 4818            LDR              R0,=GPIO_PORTE_DEN_R ;enable da
                                                            ta for PE0 and PE1
   82 0000005A 6801            LDR              R1,[R0]
   83 0000005C F04F 02FF       MOV              R2,#0xFF
   84 00000060 EA41 0102       ORR              R1,R2
   85 00000064 6001            STR              R1,[R0]
   86 00000066 4816            LDR              R0,=GPIO_PORTF_AFSEL_R 
                                                            ;clears AFSEL
   87 00000068 F04F 0100       MOV              R1,#0x0
   88 0000006C 6001            STR              R1,[R0]
   89 0000006E 4815            LDR              R0,=GPIO_PORTE_AFSEL_R 
                                                            ;clears AFSEL
   90 00000070 F04F 0100       MOV              R1,#0x0
   91 00000074 6001            STR              R1,[R0]
   92 00000076 4814            LDR              R0,=GPIO_PORTE_DATA_R ;R0 has a
                                                            ddress of data stor
                                                            age for port e
   93 00000078         
   94 00000078         loop2
   95 00000078 F44F 1199       MOV              R1, #0x132000
   96 0000007C         wait
   97 0000007C 3901            SUBS             R1,#1
   98 0000007E D1FD            BNE              wait        ;delay loop
   99 00000080 6802            LDR              R2,[R0]     ;load datat into R2
                                                            
  100 00000082 F04F 0101       MOV              R1,#0x01
  101 00000086 EA22 0201       BIC              R2,R1
  102 0000008A EA42 0201       ORR              R2,R1
  103 0000008E 6002            STR              R2,[R0]
  104 00000090 F44F 1199       MOV              R1,#0x132000
  105 00000094         wait2
  106 00000094 3901            SUBS             R1,#1
  107 00000096 D1FD            BNE              wait2       ;delay loop
  108 00000098 6802            LDR              R2,[R0]     ;load datat into R2
                                                            
  109 0000009A F640 71FE       MOV              R1,#0xFFE
  110 0000009E EA02 0201       AND              R2,R1
  111 000000A2 6002            STR              R2,[R0]
  112 000000A4 E7E8            B                loop2
  113 000000A6         
  114 000000A6         
  115 000000A6         loop
  116 000000A6         
  117 000000A6 E7FE            B                loop
  118 000000A8         
  119 000000A8                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned



ARM Macro Assembler    Page 4 


  120 000000A8                 END                          ; end of file
              400FE608 
              40024400 
              40025400 
              40025510 
              4002551C 
              4002451C 
              40025420 
              40024420 
              400243FC 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 44 in file main.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 47 in file main.s
   Uses
      At line 46 in file main.s
Comment: Start used once
loop 000000A6

Symbol: loop
   Definitions
      At line 115 in file main.s
   Uses
      At line 117 in file main.s
Comment: loop used once
loop2 00000078

Symbol: loop2
   Definitions
      At line 94 in file main.s
   Uses
      At line 112 in file main.s
Comment: loop2 used once
wait 0000007C

Symbol: wait
   Definitions
      At line 96 in file main.s
   Uses
      At line 98 in file main.s
Comment: wait used once
wait2 00000094

Symbol: wait2
   Definitions
      At line 105 in file main.s
   Uses
      At line 107 in file main.s
Comment: wait2 used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 89 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 92 in file main.s
Comment: GPIO_PORTE_DATA_R used once
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 81 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 59 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 86 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 76 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 37 in file main.s
   Uses
      At line 66 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 71 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 42 in file main.s
   Uses
      At line 51 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 49 in file main.s
Comment: TExaS_Init used once
1 symbol
350 symbols in table
