


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: ***Your Names**update this***
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 2/4/2017
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE0 is LED output (1 activates external9 LED on proto
                       board)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE0 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 8H
                       z,
   15 00000000         ;      which is 8 times per second with a duty-cycle of 
                       20%.
   16 00000000         ;      Therefore, the LED is ON for (0.2*1/8)th of a sec
                       ond
   17 00000000         ;      and OFF for (0.8*1/8)th of a second.
   18 00000000         ;   3) When the button on (PE1) is pressed-and-released 
                       increase
   19 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   20 00000000         ;      press-and-release the duty cycle changes from 20%
                        to 40% to 60%
   21 00000000         ;      to 80% to 100%(ON) to 0%(Off) to 20% to 40% so on
                       
   22 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   23 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   24 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   25 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   26 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 8Hz.
   27 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   28 00000000         ;         cycle or reset to 20%.
   29 00000000         ;      TIP: debugging the breathing LED algorithm and fe
                       el on the simulator is impossible.
   30 00000000         ; PortE device registers
   31 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   32 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   33 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   34 00000000 4002451C 



ARM Macro Assembler    Page 2 


                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   35 00000000         ; PortF device registers
   36 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   37 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   38 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   39 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000 0007A120 
                       initial EQU              0x7A120
   42 00000000 002625A0 
                       eigth   EQU              0x2625A0
   43 00000000         
   44 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   45 00000000                 IMPORT           TExaS_Init
   46 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   47 00000000                 THUMB
   48 00000000                 EXPORT           Start
   49 00000000         Start
   50 00000000         ; TExaS_Init sets bus clock at 80 MHz
   51 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   52 00000004 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   53 00000006 4832            LDR              R0,=SYSCTL_RCGCGPIO_R 
                                                            ;enable the clock
   54 00000008 6801            LDR              R1,[R0]
   55 0000000A F041 0130       ORR              R1,#0x30
   56 0000000E 6001            STR              R1,[R0]
   57 00000010 BF00            NOP
   58 00000012 BF00            NOP
   59 00000014 BF00            NOP
   60 00000016 BF00            NOP
   61 00000018 482E            LDR              R0,=GPIO_PORTE_DIR_R 
                                                            ;enable direction
   62 0000001A 6802            LDR              R2,[R0]
   63 0000001C F04F 0101       MOV              R1,#0x01    ;ports E1 and F4 ar
                                                            e outputs
   64 00000020 EA42 0201       ORR              R2,R1
   65 00000024 F06F 0102       MOV              R1,#0xFFFFFFFD
   66 00000028 EA02 0201       AND              R2,R1
   67 0000002C 6002            STR              R2,[R0]
   68 0000002E 482A            LDR              R0,=GPIO_PORTF_DIR_R
   69 00000030 6801            LDR              R1,[R0]
   70 00000032 F640 72EF       MOV              R2,#0xFEF



ARM Macro Assembler    Page 3 


   71 00000036 EA01 0102       AND              R1,R2
   72 0000003A 6001            STR              R1,[R0]
   73 0000003C 4827            LDR              R0,=GPIO_PORTF_PUR_R ;enable pu
                                                            ll up resistors for
                                                             PF4
   74 0000003E 6801            LDR              R1,[R0]
   75 00000040 F04F 0210       MOV              R2,#0x010
   76 00000044 EA41 0102       ORR              R1,R2
   77 00000048 6001            STR              R1,[R0]
   78 0000004A 4825            LDR              R0,=GPIO_PORTF_DEN_R ;enable da
                                                            ta for port PF4
   79 0000004C 6801            LDR              R1,[R0]
   80 0000004E F04F 0210       MOV              R2,#0x010
   81 00000052 EA41 0102       ORR              R1,R2
   82 00000056 6001            STR              R1,[R0]
   83 00000058 4822            LDR              R0,=GPIO_PORTE_DEN_R ;enable da
                                                            ta for PE0 and PE1
   84 0000005A 6801            LDR              R1,[R0]
   85 0000005C F04F 02FF       MOV              R2,#0xFF
   86 00000060 EA41 0102       ORR              R1,R2
   87 00000064 6001            STR              R1,[R0]
   88 00000066 4820            LDR              R0,=GPIO_PORTF_AFSEL_R 
                                                            ;clears AFSEL
   89 00000068 F04F 0100       MOV              R1,#0x0
   90 0000006C 6001            STR              R1,[R0]
   91 0000006E 481F            LDR              R0,=GPIO_PORTE_AFSEL_R 
                                                            ;clears AFSEL
   92 00000070 F04F 0100       MOV              R1,#0x0
   93 00000074 6001            STR              R1,[R0]
   94 00000076         
   95 00000076         loop2
   96 00000076 481E            LDR              R0, =GPIO_PORTF_DATA_R
   97 00000078 6801            LDR              R1, [R0]
   98 0000007A F001 0110       AND              R1, R1, #0x10 ; Isolate PF4
   99 0000007E D1FF            BNE              flash
  100 00000080         ; Breathing LED
  101 00000080         flash
  102 00000080 F04F 0401       MOV              R4, #1
  103 00000084 481B            LDR              R0, =GPIO_PORTE_DATA_R
  104 00000086 680D            LDR              R5, [R1]
  105 00000088 F005 0502       AND              R5, R5, #0x2 ; Mask PORTE_DATA 
                                                            so that only PE1(bu
                                                            tton) is kept
  106 0000008C D005            BEQ              not0        ; Takes branch if b
                                                            utton has not been 
                                                            pressed
  107 0000008E F104 0401       ADD              R4, R4, #1  ; Increments 
  108 00000092 1FA5            SUBS             R5, R4, #6
  109 00000094 D101            BNE              not0        ; Checks to see if 
                                                            buton has been pres
                                                            sed 5 times meaning
                                                             it should be at 0%
                                                            
  110 00000096 F004 0400       AND              R4, R4, #0  ; R4 has the multip
                                                            lier for %20 increm
                                                            emnts of the led ti
                                                            me on
  111 0000009A         
  112 0000009A 4917    not0    LDR              R1, =initial 



ARM Macro Assembler    Page 4 


                                                            ;1/40th of a second
                                                            
  113 0000009C FB01 F104       MUL              R1, R1, R4
  114 000000A0 4A16            LDR              R2, =eigth
  115 000000A2 EBA2 0201       SUB              R2, R2, R1  ; Puts 20%*R4 in R1
                                                             and subtracts it f
                                                            rom eigth of a seco
                                                            nd >> R2
  116 000000A6         wait
  117 000000A6 3A01            SUBS             R2,#1
  118 000000A8 D1FD            BNE              wait        ;delay loop
  119 000000AA 6802            LDR              R2,[R0]     ;load data into R2
  120 000000AC F04F 0301       MOV              R3,#0x01
  121 000000B0 EA22 0203       BIC              R2,R3
  122 000000B4 EA42 0203       ORR              R2,R3
  123 000000B8 6002            STR              R2,[R0]     ; Turns on the LED
  124 000000BA         wait2
  125 000000BA 3901            SUBS             R1,#1
  126 000000BC D1FD            BNE              wait2       ;delay loop
  127 000000BE 6802            LDR              R2,[R0]     ;load datat into R2
                                                            
  128 000000C0 F640 71FE       MOV              R1,#0xFFE
  129 000000C4 EA02 0201       AND              R2,R1
  130 000000C8 6002            STR              R2,[R0]
  131 000000CA E7D4            B                loop2
  132 000000CC         
  133 000000CC         
  134 000000CC         loop
  135 000000CC         
  136 000000CC E7FE            B                loop
  137 000000CE         
  138 000000CE 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  139 000000D0                 END                          ; end of file
              400FE608 
              40024400 
              40025400 
              40025510 
              4002551C 
              4002451C 
              40025420 
              40024420 
              400253FC 
              400243FC 
              0007A120 
              002625A0 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 49 in file main.s
   Uses
      At line 48 in file main.s
Comment: Start used once
flash 00000080

Symbol: flash
   Definitions
      At line 101 in file main.s
   Uses
      At line 99 in file main.s
Comment: flash used once
loop 000000CC

Symbol: loop
   Definitions
      At line 134 in file main.s
   Uses
      At line 136 in file main.s
Comment: loop used once
loop2 00000076

Symbol: loop2
   Definitions
      At line 95 in file main.s
   Uses
      At line 131 in file main.s
Comment: loop2 used once
not0 0000009A

Symbol: not0
   Definitions
      At line 112 in file main.s
   Uses
      At line 106 in file main.s
      At line 109 in file main.s

wait 000000A6

Symbol: wait
   Definitions
      At line 116 in file main.s
   Uses
      At line 118 in file main.s
Comment: wait used once
wait2 000000BA




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: wait2
   Definitions
      At line 124 in file main.s
   Uses
      At line 126 in file main.s
Comment: wait2 used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 91 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 103 in file main.s
Comment: GPIO_PORTE_DATA_R used once
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 83 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 61 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 88 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 96 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 78 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 37 in file main.s
   Uses
      At line 68 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 73 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 44 in file main.s
   Uses
      At line 53 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
eigth 002625A0

Symbol: eigth
   Definitions
      At line 42 in file main.s
   Uses
      At line 114 in file main.s
Comment: eigth used once
initial 0007A120

Symbol: initial
   Definitions
      At line 41 in file main.s
   Uses
      At line 112 in file main.s
Comment: initial used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 51 in file main.s
Comment: TExaS_Init used once
1 symbol
354 symbols in table
